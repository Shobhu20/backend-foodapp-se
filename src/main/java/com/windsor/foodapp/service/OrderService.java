package com.windsor.foodapp.service;

import com.windsor.foodapp.dao.FoodItemDao;
import com.windsor.foodapp.dao.UserDao;
import com.windsor.foodapp.enums.ORDER_STATUS_ENUM;
import com.windsor.foodapp.model.ClientUser;
import com.windsor.foodapp.model.CustomerOrder;
import com.windsor.foodapp.model.FoodItem;
import com.windsor.foodapp.model.OrderItem;
import org.springframework.stereotype.Component;

import javax.annotation.Resource;
import java.util.*;
import java.util.stream.Collectors;

@Component
public class OrderService {

    @Resource
    FoodItemDao foodItemDao;

    @Resource
    UserDao userDao;


    public void placeOrder(String email, Map<Integer, Integer> foodIdToQuantityMap) {
        String ids = foodIdToQuantityMap.keySet().stream().map(Object::toString).collect(Collectors.joining(","));

        //get user name
        ClientUser user = userDao.getUserForEmail(email);
        Map<Integer, FoodItem> foodIdtoItemMap = foodItemDao.getFoodItemsForIds(ids);
        //first need to save order so that order id can be generated
        List<OrderItem> orderItemList = new ArrayList<>();
        double totalCost = 0;
        long maxTime =0;
        //Creating order calculation
        int fcId = foodIdtoItemMap.get(0).getFoodCourtid();
        String fcName = foodIdtoItemMap.get(0).getFoodCourtName();

        for(Map.Entry<Integer, Integer> entry: foodIdToQuantityMap.entrySet()) {
            FoodItem foodItem = foodIdtoItemMap.get(entry.getKey());
            totalCost += foodItem.getCost();
            if(foodItem.getTimeToPrepareInMinutes() > maxTime) {
                maxTime = foodItem.getTimeToPrepareInMinutes();
            }
        }
        //todo:just creating for reference id will be generated by db
        CustomerOrder customerOrder = new CustomerOrder(0, /*todo getid in user user.getId()*/ 0, user.getFirstName() + " " + user.getLastName(), totalCost,
        new Date(),fcId, fcName, ORDER_STATUS_ENUM.ACTIVE, maxTime);






        for(Map.Entry<Integer, Integer> entry: foodIdToQuantityMap.entrySet()) {
            FoodItem foodItem = foodIdtoItemMap.get(entry.getKey());
            new OrderItem(entry.getKey()/*todo wrong this is new id*/, foodItem.getName(), 0/*todo: set order id*/,foodItem.getRestaurantId(),foodItem.getRestuarantName(), foodItem.getCost(), entry.getValue());
        }
    }
}
